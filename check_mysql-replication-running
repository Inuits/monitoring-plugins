#!/bin/sh

# ########################################################################
# This program is based on pmp-check-mysql-replication-running
# from Percona Monitoring Plugins by Baron Schwartz
# License: GPL License (see COPYING)
# Authors:
#  dmaes@inuits.eu
# ########################################################################

# ########################################################################
# Redirect STDERR to STDOUT; Nagios doesn't handle STDERR.
# ########################################################################
exec 2>&1

# ########################################################################
# Set up constants, etc.
# ########################################################################
STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3
STATE_DEPENDENT=4
EXITSTATUS=$STATE_UNKNOWN

# ########################################################################
# Run the program.
# ########################################################################
main() {
   # Get options
   for o; do
      case "${o}" in
         -c)              shift; OPT_CRIT="${1}"; shift; ;;
         --defaults-file) shift; OPT_DEFT="${1}"; shift; ;;
         -H)              shift; OPT_HOST="${1}"; shift; ;;
         -l)              shift; OPT_USER="${1}"; shift; ;;
         -p)              shift; OPT_PASS="${1}"; shift; ;;
         -P)              shift; OPT_PORT="${1}"; shift; ;;
         -S)              shift; OPT_SOCK="${1}"; shift; ;;
         -w)              shift; OPT_WARN="${1}"; shift; ;;
         --version)       grep -A2 '^=head1 VERSION' "$0" | tail -n1; exit 0 ;;
         --help)          perl -00 -ne 'm/^  Usage:/ && print' "$0"; exit 0 ;;
         -*)              echo "Unknown option ${o}.  Try --help."; exit 1; ;;
      esac
   done
   if [ -e '/etc/nagios/mysql.cnf' ]; then
      OPT_DEFT="${OPT_DEFT:-/etc/nagios/mysql.cnf}"
   fi

   # Get replication status into a temp file. TODO: move this into a subroutine
   # and test it.
   local TEMP=$(mktemp "/tmp/${0##*/}.XXXX") || exit $?
   trap 'rm -rf "${TEMP}" >/dev/null 2>&1' EXIT
   mysql_exec 'SHOW SLAVE STATUS\G' > "${TEMP}"
   if [ $? = 0 ]; then
      # SHOW SLAVE STATUS isn't an error if the server isn't a replica. The file
      # will be empty if that happens.
      if [ -s "${TEMP}" ]; then
         NOTE=$(awk '$1 ~ /_Running:|Last_Error:/{print substr($0, 1, 100)}' "${TEMP}")
         if grep 'Last_Error: .' "${TEMP}" >/dev/null 2>&1; then
            EXITSTATUS=$STATE_CRITICAL
            NOTE="CRIT $NOTE"
         elif grep '_Running: No' "${TEMP}" >/dev/null 2>&1; then
            if [ "${OPT_CRIT}" = 1 ] || [ "${OPT_CRIT}" = 3]; then
               EXITSTATUS=$STATE_CRITICAL
               NOTE="CRIT $NOTE"
            else
               EXITSTATUS=$STATE_WARNING
               NOTE="WARN $NOTE"
            fi
         fi
      else
         NOTE="This server is not configured as a replica."
         if [ "${OPT_CRIT}" = 2 ] || [ "${OPT_CRIT}" = 3]; then
            # Empty file; not a replica, but that's absolutely not supposed to happen.
            NOTE="CRIT $NOTE"
            EXITSTATUS=$STATE_CRITICAL
         elif [ "${OPT_WARN}" ]; then
            # Empty file; not a replica, but that's not supposed to happen.
            NOTE="WARN $NOTE"
            EXITSTATUS=$STATE_WARNING
         else
            # Empty file; not a replica, but that's ok.
            NOTE="OK $NOTE"
            EXITSTATUS=$STATE_OK
         fi
      fi
   else
      EXITSTATUS=$STATE_UNKNOWN
      NOTE="UNK could not determine replication status"
   fi

   echo $NOTE
   exit $EXITSTATUS
}

# ########################################################################
# Execute a MySQL command.
# ########################################################################
mysql_exec() {
   mysql ${OPT_DEFT:+--defaults-file="${OPT_DEFT}"} ${OPT_HOST:+-h"${OPT_HOST}"} ${OPT_USER:+-u"${OPT_USER}"} \
      ${OPT_PASS:+-p"${OPT_PASS}"} ${OPT_SOCK:+-S"${OPT_SOCK}"} ${OPT_PORT:+-P"${OPT_PORT}"} \
      -ss -e "$1"
}

# ########################################################################
# Execute the program if it was not included from another file.
# This makes it possible to include without executing, and thus test.
# ########################################################################
if    [ "${0##*/}" = "check_mysql-replication-running" ] \
   || [ "${0##*/}" = "bash" -a "$_" = "$0" ]; then
   main "$@"
fi

# ############################################################################
# Documentation
# ############################################################################
: <<'DOCUMENTATION'
=pod

=head1 NAME

check_mysql-replication-running - Alert when MySQL replication stops.

=head1 SYNOPSIS

  Usage: check-mysql-replication-running [OPTIONS]
  Options:
    -c CRIT         Report CRITICAL when
                    1) replication is stopped without errors.
                    2) SHOW SLAVE STATUS output is empty (overrides -w)
                    3) 1+2
                    0) none of above (default)
    --defaults-file FILE Only read mysql options from the given file.
                    Defaults to /etc/nagios/mysql.cnf if it exists.
    -H HOST         MySQL hostname.
    -l USER         MySQL username.
    -p PASS         MySQL password.
    -P PORT         MySQL port.
    -S SOCKET       MySQL socket file.
    -w WARN         Report WARNING when SHOW SLAVE STATUS output is empty.
    --help          Print help and exit.
    --version       Print version and exit.
  Options must be given as --option value, not --option=value or -Ovalue.
  Use perldoc to read embedded documentation with more details.

=head1 DESCRIPTION

This Nagios plugin examines whether replication is running. It is separate from
the check for delay because it is confusing or impossible to handle all of the
combinations of replication errors and delays correctly, and provide an
appropriate type of alert, in a single program.

By default, this plugin treats it as critical when the either thread stops with
an error, and a warning when threads are stopped with no error.  You can provide
critical and warning thresholds with the -c and -w options, for compatibility
with Nagios plugin conventions, but they don't work as thresholds.  Instead, if
you specify a critical threshold, this plugin will treat it as critical if
(1) either thread is stopped, with or without an error, (2) SHOW SLAVE STATUS
output is empty or (3) both 1 and 2

The warning threshold makes the plugin report a warning when SHOW SLAVE STATUS
produces no output, which means it is not configured as a replica. The critical
treshold can override this. By default, this plugin will report that
replication is healthy when a server isn't configured as a replica.

=head1 PRIVILEGES

This plugin executes the following commands against MySQL:

=over

=item *

C<SHOW SLAVE STATUS>.

=back

This plugin executes no UNIX commands that may need special privileges. 

=head1 COPYRIGHT, LICENSE, AND WARRANTY

This program is copyright 2012 Baron Schwartz, 2012 Percona Inc.
Feedback and improvements are welcome.

THIS PROGRAM IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, version 2.  You should have received a copy of the GNU General
Public License along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.

=head1 VERSION

check_mysql-replication-running 1.1

=cut

DOCUMENTATION
